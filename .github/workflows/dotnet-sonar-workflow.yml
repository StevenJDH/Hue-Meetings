name: 'build'

on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '*.png'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - '*.png'
      - '/.github/ISSUE_TEMPLATE/'
    types: [opened, synchronize, reopened] # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#pull_request
  workflow_dispatch:
    inputs:
      reason:
        description: 'The reason for running the workflow.'
        required: true
        default: 'Manual run'

jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clone is recommended for improving relevancy.
        fetch-depth: 0

    # Already installed on build agent.
    # - name: Setup .NET
    #   uses: actions/setup-dotnet@v4
    #   with:
    #     dotnet-version: 8.x

    # Step needed to avoid issues with sonarscanner and preinstalled Java 11.
    - name: Install Temurin OpenJDK
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        architecture: x64

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~\.nuget\packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: ${{ runner.os }}-nuget

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~\.sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v4
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

    - name: Restore dependencies
      run: dotnet restore

    - name: Build, test, and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"StevenJDH_Hue-Meetings" /o:"stevenjdh" /d:sonar.token=$env:SONAR_TOKEN /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="**/TestResults/*/coverage.opencover.xml" /d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx" /d:sonar.language=cs `
            /d:sonar.scanner.scanAll=false /d:sonar.coverage.exclusions="**/*.*"
        dotnet build --configuration Debug --no-restore
        dotnet test --no-build --configuration Debug --verbosity normal --collect:"XPlat Code Coverage" --logger trx -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token=$env:SONAR_TOKEN